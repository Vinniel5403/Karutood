import fetch from "node-fetch";
import { configDotenv } from "dotenv";

configDotenv();

const API_KEY = process.env.API_KEY;
const count = 15;

// ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ keyword ‡πÅ‡∏ô‡∏ß meme / viral / funny
const keywords = [
  "Black People",
  "Instagram",
  "Chinese",
  "Cat",
  "Food",
  "Oputo",
  "meme",
  "‡πÑ‡∏ó‡∏¢",
  "chefhiro4898",
  "CrunchycatLuna",
  "BayashiTV_",
  "PeeBaoKitchen",
  "Bosscat4444",
  "uma musume",
  "JIMSURIYAV2",
  "‡∏°‡∏≤‡∏•‡∏µ ‡∏™‡∏ß‡∏¢‡∏°‡∏≤‡∏Å",
  "Overboot",
  "‡∏≠‡∏µ‡∏™‡∏≤‡∏ô",
  "My Mate Nate",
  "Ishowspeed",
  "Opztv",
  "Artist",
  "Mistake When Drawing",
  "TheMainManSWE",
  "‡∏û‡∏µ‡πà‡πÄ‡∏™‡∏Å",
  "Revy Ghosting",
  "Sushi Monsters",
  "‡πÑ‡∏ß‡∏£‡∏±‡∏•",
  "shorts",
  "vtuber",
  "undertale",
  "mukbang",
  "Ado",
  "Tiktok",
  "Laibaht",
  "Fumihouse",
  "‡∏ô‡∏≤‡∏ô‡∏≤‡πÇ‡∏Æ‡∏ä‡∏¥ ‡∏ô‡∏≤‡∏ô‡∏∞ / ‰∏ÉÊòü„Éä„Éä",
  "Edit",
  "Anime Edit"
];

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥ 2‚Äì5 ‡∏Ñ‡∏≥ ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏ß‡∏°‡∏î‡πâ‡∏ß‡∏¢ OR
export function randomQuery() {
  const num = Math.floor(Math.random() * 1 + 0);
  const selected = [];
  const usedIndexes = new Set();

  while (selected.length < num) {
    const idx = Math.floor(Math.random() * keywords.length);
    if (!usedIndexes.has(idx)) {
      usedIndexes.add(idx);
      selected.push(keywords[idx]);
    }
  }

  return selected.join(" OR ");
}

// ‡πÅ‡∏õ‡∏•‡∏á ISO 8601 duration ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
function parseDuration(duration) {
  const match = duration.match(/PT(?:(\d+)M)?(?:(\d+)S)?/);
  const minutes = parseInt(match?.[1] || 0);
  const seconds = parseInt(match?.[2] || 0);
  return minutes * 60 + seconds;
}

// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö pageToken
export default async function getRandomMemeShorts(inputKeyword) {
  const query = inputKeyword || randomQuery();

  try {
    // ‡∏™‡∏∏‡πà‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå 0‚Äì4 ‡∏´‡∏ô‡πâ‡∏≤ (‡∏ö‡∏≤‡∏á keyword ‡∏°‡∏µ‡πÅ‡∏Ñ‡πà 1‚Äì2 ‡∏´‡∏ô‡πâ‡∏≤)
    const randomPage = Math.floor(Math.random() * 0);
    let pageToken = "";
    let searchData = null;

    for (let i = 0; i <= randomPage; i++) {
      const searchUrl = `https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&maxResults=${count}&part=snippet&type=video&videoDuration=short&q=${encodeURIComponent(
        query
      )}${pageToken ? `&pageToken=${pageToken}` : ""}`;

      const res = await fetch(searchUrl);
      searchData = await res.json();

      if (!searchData.items || searchData.items.length === 0) break;
      pageToken = searchData.nextPageToken || "";
      if (!pageToken) break; // ‡∏ñ‡πâ‡∏≤‡∏´‡∏°‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡πá‡∏´‡∏¢‡∏∏‡∏î
    }

    if (!searchData?.items) {
      console.log("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏ô‡∏µ‡πâ");
      return null;
    }

    // ‡∏î‡∏∂‡∏á video detail
    const videoIds = searchData.items.map((item) => item.id.videoId).join(",");
    const detailUrl = `https://www.googleapis.com/youtube/v3/videos?part=snippet,statistics,contentDetails&id=${videoIds}&key=${API_KEY}`;
    const detailRes = await fetch(detailUrl);
    const detailData = await detailRes.json();

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏•‡∏¥‡∏õ‡∏™‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡πÑ‡∏•‡∏Ñ‡πå‡πÄ‡∏¢‡∏≠‡∏∞
    const filtered = detailData.items.filter((v) => {
      const likes = parseInt(v.statistics.likeCount || 0);
      const duration = parseDuration(v.contentDetails.duration || "PT0S");
      return duration < 80 && likes >= 10;
    });

    if (filtered.length === 0) return null;

    // ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏•‡∏¥‡∏õ‡∏à‡∏≤‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
    const randomVid = filtered[Math.floor(Math.random() * filtered.length)];

    const result = `üé¨ ${randomVid.snippet.title}
‚ù§Ô∏è Likes: ${randomVid.statistics.likeCount}
‚è± Duration: ${parseDuration(randomVid.contentDetails.duration)}s
üîó https://www.youtube.com/shorts/${randomVid.id}`;

    console.log(`üîç ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô: ${query} (Page ${randomPage + 1})`);
    console.log(result);

    return result;
  } catch (err) {
    console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err);
    return null;
  }
}
