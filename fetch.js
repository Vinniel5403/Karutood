import fetch from "node-fetch";
import { configDotenv } from "dotenv";

configDotenv();

const API_KEY = process.env.API_KEY;
const count = 10;

// ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ keyword ‡πÅ‡∏ô‡∏ß meme / viral / funny
const keywords = [
  "Black People",
  "Instagram",
  "Chinese",
  "Cat",
  "Food",
  "Oputo",
  "meme",
  "‡πÑ‡∏ó‡∏¢",
  "chefhiro4898",
  "CrunchycatLuna" ,
  "BayashiTV_",
  "‡πÇ‡∏ä‡πÄ‡∏•‡πà‡∏¢‡πå ‡∏î‡∏≠‡∏Å‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏ô",
  "PeeBaoKitchen",
  "Bosscat4444",
  "uma musume",
  "JIMSURIYAV2",
  "‡∏°‡∏≤‡∏•‡∏µ ‡∏™‡∏ß‡∏¢‡∏°‡∏≤‡∏Å",
  "Overboot",
  "‡∏≠‡∏µ‡∏™‡∏≤‡∏ô",
  "My Mate Nate",
  "Ishowspeed",
  "Opztv",
  "Artist",
  'Mistake When Drawing',
  "TheMainManSWE",
  "‡∏û‡∏µ‡πà‡πÄ‡∏™‡∏Å",
  "Revy Ghosting",
  "Sushi Monsters"
];

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥ 3‚Äì5 ‡∏Ñ‡∏≥ ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏ß‡∏°‡∏î‡πâ‡∏ß‡∏¢ OR
export function randomQuery() {
  const num = Math.floor(Math.random() * 3 + 2); // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 3-5 ‡∏Ñ‡∏≥ (‡πÅ‡∏Å‡πâ‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
  const selected = [];
  const usedIndexes = new Set();

  while (selected.length < num) {
    const idx = Math.floor(Math.random() * keywords.length);
    if (!usedIndexes.has(idx)) {
      usedIndexes.add(idx);
      selected.push(keywords[idx]);
    }
  }

  return selected.join(" OR ");
}


// ‡πÅ‡∏õ‡∏•‡∏á ISO 8601 duration ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
function parseDuration(duration) {
  const match = duration.match(/PT(\d+M)?(\d+S)?/);
  const minutes = parseInt(match?.[1] || 0);
  const seconds = parseInt(match?.[2] || 0);
  return minutes * 60 + seconds;
}

export default async function getRandomMemeShorts(keywords) {
const query = keywords ? keywords : randomQuery();
  const searchUrl = `https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&maxResults=${count}&part=snippet&type=video&videoDuration=short&q=${encodeURIComponent(
    query
  )}`;

  try {
    const searchRes = await fetch(searchUrl);
    const searchData = await searchRes.json();

    if (!searchData.items) return console.log("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");

    const videoIds = searchData.items.map((item) => item.id.videoId).join(",");
    const detailUrl = `https://www.googleapis.com/youtube/v3/videos?part=snippet,statistics,contentDetails&id=${videoIds}&key=${API_KEY}`;
    const detailRes = await fetch(detailUrl);
    const detailData = await detailRes.json();

    const filtered = detailData.items.filter((v) => {
      const likes = parseInt(v.statistics.likeCount || 0);
      const duration = parseDuration(v.contentDetails.duration || "PT0S");
      return duration < 80 && likes >= 10;
    });

    if (filtered.length === 0) return null;

    const randomVid = filtered[Math.floor(Math.random() * filtered.length)];

    // filtered.forEach((v) => {
    //   console.log(`‚ñ∂Ô∏è ${v.snippet.title}`);
    //   console.log(`‚ù§Ô∏è Likes: ${v.statistics.likeCount}`);
    //   console.log(`‚è± Duration: ${parseDuration(v.contentDetails.duration)}s`);
    //   console.log(`üîó https://www.youtube.com/shorts/${v.id}\n`);
    // });
    const result = `üé¨ ${randomVid.snippet.title}\n‚ù§Ô∏è Likes: ${
      randomVid.statistics.likeCount
    }\n‚è± Duration: ${parseDuration(
      randomVid.contentDetails.duration
    )}s\nüîó https://www.youtube.com/shorts/${randomVid.id}`;

    console.log(`üîç ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô: ${query}`);
    console.log(result);

    return result;
  } catch (err) {
    console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err);
  }
}
